# -*- coding: utf-8 -*-
#
# JPT documentation build configuration file, created by
# sphinx-quickstart on Wed Oct  3 13:41:11 2012.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import sphinx_bootstrap_theme


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('.'))
sys.path.append('.')
sys.path.insert(0, os.path.abspath('../../src'))

# def skip_util_classes(app, what, name, obj, skip, options):
#     if name == "__init__":
#        skip = False
#
#     if skip:
#         print('==========================================SKIPPING', app, what, name, obj, options)
#     return skip


def setup(app):
    app.add_css_file('css/custom_styles.css')
    # app.connect("autodoc-skip-member", skip_util_classes)


try:
    from sphinxcontrib import bibtex
except (ImportError, ModuleNotFoundError):
    print('ERROR: bibtex extension for sphinx not found. Install with')
    print()
    print('   pip install sphinxcontrib-bibtex')
    print()
    exit(1)

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['autoapi.extension',
              'sphinx.ext.doctest',
              'sphinx.ext.coverage',
              'sphinx.ext.mathjax',
              'sphinxcontrib.bibtex',
              'sphinx_numfig.numfig',
              'sphinx_paramlinks'
              ]

# type of files to be documented
autoapi_type = 'python'

# Paths (relative or absolute) to the source code
autoapi_dirs = ['../../src']

# Path to output the generated AutoAPI files into,
autoapi_root = 'autoapi'

# keep generated files (use this when apidoc reports weird indentation/formatting warnings in generated files
autoapi_keep_files = True

# A list of patterns to ignore when finding files.
# Any file matched by these patterns will be disregarded completely by apidoc which means that (!!!) other modules
# importing anything from that file will cause "Cannot resolve import of unknown module" warnings for that file.
# The reason for this behavior is that apidoc is dumb as shit.
autoapi_ignore = ['*migrations*', '*main.py', '*example.py', '*probs.py']

# Options for display of the generated documentation.
autoapi_options = ['members',                   # Display children of an object
                   'inherited-members',         # Display children of an object that have been inherited from a base class.
                   # 'undoc-members',             # Display objects that have no docstring
                   'private-members',           # Display private objects (eg. _foo in Python)
                   # 'special-members',           # Display special objects (eg. __foo__ in Python)
                   # 'show-inheritance',          # Display a list of base classes below the class signature.
                   'show-inheritance-diagram',  # Display a list of base classes below the class signature. (makes a fancy graphviz picture)
                   # 'show-module-summary',       # Whether to include autosummary directives in generated module documentation.
                   # 'imported-members'           # Display objects imported from the same top level package or module. The default module template does not include imported objects, even with this option enabled. The default package template does.
                   ]

# Use the concatentation of the class docstring and the __init__ docstring
autoapi_python_class_content = 'both'

autoapi_add_toctree_entry = False
autoapi_generate_api_docs = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Joint Probability Trees'
projectshort = u'JPT'
copyright = u'2021, Mareike Picklum, Daniel Nyga'
leaddev1 = u'Mareike Picklum'
leaddev2 = u'Daniel Nyga'
leaddev1mail = u'mareikep@cs.uni-bremen.de'
leaddev2mail = u'nyga@cs.uni-bremen.de'


# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'1.0'
# The full version, including alpha/beta/rc tags.
release = u'1.0.0'

rst_epilog = """
.. |version| replace:: {version}
.. |release| replace:: {release}
.. |leaddev1| replace:: {leaddev1}
.. |leaddev1mail| replace:: {leaddev1mail}
.. |leaddev2| replace:: {leaddev2}
.. |leaddev2mail| replace:: {leaddev2mail}
.. |project| replace:: {project}
""".format(
    version=version,
    release=release,
    leaddev1=leaddev1,
    leaddev1mail=leaddev1mail,
    leaddev2=leaddev2,
    leaddev2mail=leaddev2mail,
    project=project
)

html_context = {
    'teaser_text': "We are happy to announce Version {} of Joint Probability Trees!".format(version)
}

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['build', '_md_tests.rst']

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'bootstrap'
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = ['.']

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = os.path.join('_static', 'img', 'logo_orig.png')

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = '_static/favicon.ico'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'JPTDoc'


# -- Options for LaTeX output --------------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'JPT.tex', u'Joint Probability JPT Documentation',
   u'Mareike Picklum, Daniel Nyga', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'JPT', u'Joint Probability JPT Documentation',
     [u'Mareike Picklum, Daniel Nyga'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output ------------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'JPT', u'Joint Probability JPT Documentation',
   u'Mareike Picklum, Daniel Nyga', 'JPT', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'


# -- Options for Epub output ---------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = u'Joint Probability Trees'
epub_author = u'Mareike Picklum, Daniel Nyga'
epub_publisher = u'Mareike Picklum, Daniel Nyga'
epub_copyright = u'2021, Mareike Picklum, Daniel Nyga'

# The language of the text. It defaults to the language option
# or en if the language is not set.
#epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
#epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#epub_identifier = ''

# A unique identification for the text.
#epub_uid = ''

# A tuple containing the cover image and cover page html template filenames.
#epub_cover = ()

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_pre_files = []

# HTML files shat should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_post_files = []

# A list of files that should not be packed into the epub file.
#epub_exclude_files = []

# The depth of the table of contents in toc.ncx.
#epub_tocdepth = 3

# Allow duplicate toc entries.
#epub_tocdup = True
intersphinx_mapping = {'http://docs.python.org/': None}
