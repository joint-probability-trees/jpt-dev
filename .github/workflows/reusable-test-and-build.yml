name: Run tests and build the Python distribution

on:
  push:
    branches:
      - main

  # --------------------------------------------------------------------------------------------------------------------

  workflow_call:
    inputs:
      version:
        required: true
        type: string

      python-versions:
        required: true
        type: string
        default: "cp312-cp312"

# ----------------------------------------------------------------------------------------------------------------------

defaults:
  run:
    shell: bash
    working-directory: .

# ----------------------------------------------------------------------------------------------------------------------

concurrency:
  group: 'jpt-building-and-deployment'
  cancel-in-progress: true

# ----------------------------------------------------------------------------------------------------------------------

jobs:
  test-and-build:
    name: Build and Test the Python distribution
    runs-on: ubuntu-latest

    steps:

      - name: Checkout üõé
        uses: actions/checkout@v4

      # ----------------------------------------------------------------------------------------------------------------

      - name: Setup python üêç
        uses: actions/setup-python@v4
        with:
            python-version: 3.12
            cache: pip

#      - name: Cache pip dependencies
#        uses: actions/cache@v2
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-


      - name: Upgrade pip
        run: |
          pip install -U pip

      - name: Install additional build dependencies
        run: |
          pip install -U numpy setuptools wheel

      # ----------------------------------------------------------------------------------------------------------------

      - name: Setup Graphviz üìä
        uses: ts-graphviz/setup-graphviz@v1

      # ----------------------------------------------------------------------------------------------------------------

      - name: Install user dependencies üçº
        uses: py-actions/py-dependency-install@v4
        with:
          path: "requirements.txt"

      # ----------------------------------------------------------------------------------------------------------------

      - name: Install developer dependencies üìê
        uses: py-actions/py-dependency-install@v4
        with:
          path: "requirements-dev.txt"

      # ----------------------------------------------------------------------------------------------------------------

      - name: "Create .version file if necessary [Version # passed is '${{ inputs.version }}'] üî¢"
        if: ${{ inputs.version != '' }}
        run: |
          echo "${{ inputs.version }}" > src/jpt/.version

      # ----------------------------------------------------------------------------------------------------------------

      - name: Run Tests üéì
        run: |
          cd test
          PYTHONPATH=../src python -m unittest discover

      # ----------------------------------------------------------------------------------------------------------------

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build binary wheels üî®
        run: |
          cibuildwheel --output-dir dist-raw
        env:
          CIBW_BUILD: cp312-manylinux_x86_64
          CIBW_SKIP: '*-win32 *-manylinux_i686'
          CIBW_ENVIRONMENT: PYTHONPATH=src
          CIBW_BUILD_VERBOSITY: 1

      # ----------------------------------------------------------------------------------------------------------------

      - name: Install Sphinx dependencies üìö
        uses: py-actions/py-dependency-install@v4
        with:
          path: "doc/requirements.txt"

      # ----------------------------------------------------------------------------------------------------------------

      - name: Build Sphinx documentation üìù
        working-directory: ./doc
        run: |
          sudo apt install pandoc
          make html

      # ----------------------------------------------------------------------------------------------------------------

      - name: Make wheel available  üîß
        id: wheel_url
        uses: actions/upload-artifact@v4
        with:
          name: pyjpt-wheel
          path: dist-raw/*manylinux*.whl
